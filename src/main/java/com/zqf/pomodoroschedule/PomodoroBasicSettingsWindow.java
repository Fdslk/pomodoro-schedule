package com.zqf.pomodoroschedule;

import com.intellij.openapi.wm.ToolWindow;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.util.Calendar;

public class PomodoroBasicSettingsWindow {
    private JButton savePomodoroButton;
    private JButton cancelThisOperation;
    private JLabel pomodoroLength;
    private JLabel label2Pomodoros;
    private JLabel timeZone;
    private JPanel myToolWindowContent;
    public JComboBox cBox2BreakTimeSpan;
    public JComboBox cBox2PomodoroLength;
    private JLabel breakTimeSpan;
    private JLabel longBreakTimeSpan;
    public JComboBox cBox2longBreakTimeSpan;
    private JLabel notificationMessages;
    public JTextPane multiText2NotificationMessages;
    public JComboBox count2Pomodoros;

//    public PomodoroBasicSettingsWindow(ToolWindow toolWindow) {
//        cancelThisOperation.addActionListener(e -> toolWindow.hide(null));
//        savePomodoroButton.addActionListener(e -> currentDateTime());
//
//        this.currentDateTime();
//    }

    public PomodoroBasicSettingsWindow() {
        savePomodoroButton.addActionListener(e -> currentDateTime());

        this.currentDateTime();
    }

    public void currentDateTime() {
        // Get current date and time
        Calendar instance = Calendar.getInstance();
        pomodoroLength.setText(
                instance.get(Calendar.DAY_OF_MONTH) + "/"
                        + (instance.get(Calendar.MONTH) + 1) + "/"
                        + instance.get(Calendar.YEAR)
        );
        pomodoroLength.setIcon(new ImageIcon(getClass().getResource("/toolWindow/Calendar-icon.png")));
        int min = instance.get(Calendar.MINUTE);
        String strMin = min < 10 ? "0" + min : String.valueOf(min);
        label2Pomodoros.setText(instance.get(Calendar.HOUR_OF_DAY) + ":" + strMin);
        label2Pomodoros.setIcon(new ImageIcon(getClass().getResource("/toolWindow/Time-icon.png")));
        // Get time zone
        long gmt_Offset = instance.get(Calendar.ZONE_OFFSET); // offset from GMT in milliseconds
        String str_gmt_Offset = String.valueOf(gmt_Offset / 3600000);
        str_gmt_Offset = (gmt_Offset > 0) ? "GMT + " + str_gmt_Offset : "GMT - " + str_gmt_Offset;
        timeZone.setText(str_gmt_Offset);
        timeZone.setIcon(new ImageIcon(getClass().getResource("/toolWindow/Time-zone-icon.png")));
    }

    public JPanel getContent() {
        return myToolWindowContent;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        myToolWindowContent = new JPanel();
        myToolWindowContent.setLayout(new GridLayoutManager(7, 5, new Insets(0, 0, 0, 0), -1, -1));
        pomodoroLength = new JLabel();
        pomodoroLength.setText("Promodoro Length:");
        myToolWindowContent.add(pomodoroLength, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cBox2PomodoroLength = new JComboBox();
        cBox2PomodoroLength.setEditable(true);
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("25");
        defaultComboBoxModel1.addElement("30");
        defaultComboBoxModel1.addElement("35");
        defaultComboBoxModel1.addElement("40");
        defaultComboBoxModel1.addElement("45");
        cBox2PomodoroLength.setModel(defaultComboBoxModel1);
        myToolWindowContent.add(cBox2PomodoroLength, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        breakTimeSpan = new JLabel();
        breakTimeSpan.setText("Break Time Span:");
        myToolWindowContent.add(breakTimeSpan, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cBox2BreakTimeSpan = new JComboBox();
        cBox2BreakTimeSpan.setEditable(true);
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        defaultComboBoxModel2.addElement("5");
        defaultComboBoxModel2.addElement("10");
        defaultComboBoxModel2.addElement("15");
        cBox2BreakTimeSpan.setModel(defaultComboBoxModel2);
        myToolWindowContent.add(cBox2BreakTimeSpan, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        longBreakTimeSpan = new JLabel();
        longBreakTimeSpan.setText("Long Break Time Span:");
        myToolWindowContent.add(longBreakTimeSpan, new GridConstraints(2, 0, 3, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        notificationMessages = new JLabel();
        notificationMessages.setText("Notification Messages:");
        myToolWindowContent.add(notificationMessages, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        timeZone = new JLabel();
        timeZone.setText("minute(s) after");
        myToolWindowContent.add(timeZone, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        savePomodoroButton = new JButton();
        savePomodoroButton.setText("Save");
        myToolWindowContent.add(savePomodoroButton, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        multiText2NotificationMessages = new JTextPane();
        multiText2NotificationMessages.setBackground(new Color(-4459326));
        myToolWindowContent.add(multiText2NotificationMessages, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        cBox2longBreakTimeSpan = new JComboBox();
        cBox2longBreakTimeSpan.setEditable(true);
        final DefaultComboBoxModel defaultComboBoxModel3 = new DefaultComboBoxModel();
        defaultComboBoxModel3.addElement("20");
        defaultComboBoxModel3.addElement("25");
        defaultComboBoxModel3.addElement("30");
        defaultComboBoxModel3.addElement("35");
        defaultComboBoxModel3.addElement("40");
        cBox2longBreakTimeSpan.setModel(defaultComboBoxModel3);
        myToolWindowContent.add(cBox2longBreakTimeSpan, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelThisOperation = new JButton();
        cancelThisOperation.setText("Canel");
        myToolWindowContent.add(cancelThisOperation, new GridConstraints(6, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        label2Pomodoros = new JLabel();
        label2Pomodoros.setText("pomodoros");
        myToolWindowContent.add(label2Pomodoros, new GridConstraints(3, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        count2Pomodoros = new JComboBox();
        count2Pomodoros.setEditable(true);
        final DefaultComboBoxModel defaultComboBoxModel4 = new DefaultComboBoxModel();
        defaultComboBoxModel4.addElement("1");
        defaultComboBoxModel4.addElement("2");
        defaultComboBoxModel4.addElement("3");
        defaultComboBoxModel4.addElement("4");
        defaultComboBoxModel4.addElement("5");
        count2Pomodoros.setModel(defaultComboBoxModel4);
        myToolWindowContent.add(count2Pomodoros, new GridConstraints(3, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return myToolWindowContent;
    }
}
